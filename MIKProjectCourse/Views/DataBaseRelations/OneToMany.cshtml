@{
    ViewData["Title"] = "One-to-Many Relationship in C#";
}

<div class="container">
    <h1>🔁 One-to-Many Relationship in C#</h1>

    <p>A One-to-Many relationship means one record in Table A is related to multiple records in Table B.</p>

    <h2>📘 Example</h2>

    <p>In this example, a <code>Course</code> can have many <code>Students</code>, but each <code>Student</code> belongs to only one <code>Course</code>.</p>

    <div class="bg-light border rounded p-3 mb-4">
        <pre><code>
public class Course
{
    public int Id { get; set; }
    public string Title { get; set; }

    public List&lt;Student&gt; Students { get; set; }
}

public class Student
{
    public int Id { get; set; }
    public string Name { get; set; }

    public int CourseId { get; set; }
    public Course Course { get; set; }
}
        </code></pre>
    </div>

    <p>Here, <code>CourseId</code> is a foreign key in the <code>Student</code> class that links to the <code>Course</code> entity. A <code>Course</code> has a collection of students.</p>

    <hr />

    <h2>🔄 Next Steps</h2>

    <p>Next, let's dive into the <strong>Many-to-Many</strong> relationship. Click the link below to continue!</p>

    <p><a href="@Url.Action("ManyToMany", "DataBaseRelations")" class="btn btn-primary">Learn Many-to-Many Relationship</a></p>
</div>

<style>
    .container {
        max-width: 800px;
    }

    h1, h2, h3 {
        font-weight: bold;
        color: #333;
    }

    hr {
        border-top: 1px solid #ddd;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        text-decoration: none;
        padding: 10px 20px;
        border-radius: 5px;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    pre code {
        background-color: #f8f9fa;
        border: 1px solid #ddd;
        padding: 10px;
        border-radius: 5px;
        display: block;
        margin-bottom: 20px;
    }
</style>
