@{
    ViewData["Title"] = "Exercise: If-Else with Variables in C# - Interactive";
}

<div class="container">
    <h1>Exercise: Define Variables and If-Else Check</h1>

    <p>
        Define two integer variables <code>a</code> and <code>b</code> where <code>a = 5</code> and <code>b = 10</code>.<br />
        Then write an <strong>if-else</strong> statement to check if <code>a</code> is bigger than <code>b</code>.<br />
        - If <code>a &gt; b</code>, output <strong>"Test"</strong>.<br />
        - Otherwise, output <strong>"Test2"</strong>.
    </p>

    <label for="userCode" class="form-label" style="font-weight: 600; margin-bottom: 6px;">Type your code below:</label>
    <textarea id="userCode" rows="15" style="width: 100%; font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace; font-size: 0.95rem; padding:10px;"></textarea>

    <div style="display: flex; align-items: center; margin-top: 12px; gap: 12px;">
        <label class="switch" style="user-select: none; margin-bottom: 0;">
            <input type="checkbox" id="toggleCorrectCode" />
            <span class="slider round"></span>
        </label>
        <span style="font-weight: 600; user-select: none;">Show Correct Code</span>
    </div>

    <div id="correctCodeContainer" class="code-container" style="display:none; margin-top: 12px;">
        <div class="code-header">Correct Code</div>
        <div class="code-content" style="padding: 15px; overflow-x: auto; background-color: var(--code-bg); border: 1px solid var(--bs-border-color); border-radius: 5px; font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace; font-size: 0.9rem; color: var(--bs-body-color); white-space: pre-wrap;">
int a = 5;
int b = 10;

if (a > b)
{
    Console.WriteLine("Test");
}
else
{
    Console.WriteLine("Test2");
}
        </div>
    </div>

    <button id="checkBtn" class="btn btn-primary mt-3">Check Answer</button>
    <div id="resultMessage" style="margin-top:15px; font-weight: 600;"></div>

    <div class="navigation-buttons" style="margin-top: 30px;">
        <a href="@Url.Action("Info", "Exercises")" class="btn btn-outline-primary ajax-link">← Code format info</a>
        <a href="@Url.Action("ArrayForLoop", "Exercises")" class="btn btn-primary ajax-link">Exercise 2 →</a>
    </div>
</div>

<style>
    .container {
        max-width: 800px;
        padding: 20px;
        background-color: var(--bs-body-bg);
    }

    h1 {
        color: var(--bs-heading-color);
        margin-bottom: 20px;
    }

    p {
        color: var(--bs-body-color);
        line-height: 1.6;
    }

    .navigation-buttons {
        display: flex;
        justify-content: space-between;
    }

    .btn {
        padding: 8px 20px;
        border-radius: 4px;
        font-weight: 500;
        text-decoration: none;
        cursor: pointer;
    }

    .btn-primary {
        background-color: var(--bs-primary);
        border-color: var(--bs-primary);
        color: white;
    }

    .btn-outline-primary {
        color: var(--bs-primary);
        border-color: var(--bs-primary);
        background-color: transparent;
    }

    /* Slider switch style */
    .switch {
        position: relative;
        display: inline-block;
        width: 42px;
        height: 24px;
    }

    .switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0; left: 0; right: 0; bottom: 0;
        background-color: #ccc;
        transition: 0.4s;
        border-radius: 24px;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 18px;
        width: 18px;
        left: 3px;
        bottom: 3px;
        background-color: white;
        transition: 0.4s;
        border-radius: 50%;
    }

    input:checked + .slider {
        background-color: var(--bs-primary);
    }

    input:checked + .slider:before {
        transform: translateX(18px);
    }

    .code-container {
        border: 1px solid var(--bs-border-color);
        border-radius: 5px;
        overflow: hidden;
        background-color: var(--code-bg);
    }

    .code-header {
        background-color: var(--code-header-bg);
        padding: 10px 15px;
        border-bottom: 1px solid var(--bs-border-color);
        font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
        font-size: 0.9rem;
        color: var(--bs-body-color);
    }
</style>

<script>
    const correctCode =
`int a = 5;
int b = 10;

if (a > b)
{
    Console.WriteLine("Test");
}
else
{
    Console.WriteLine("Test2");
}`;

    document.getElementById("checkBtn").addEventListener("click", () => {
        const userCode = document.getElementById("userCode").value.trim().replace(/\r\n/g, "\n");
        const normalizedCorrectCode = correctCode.trim().replace(/\r\n/g, "\n");

        const resultMessage = document.getElementById("resultMessage");

        if (userCode === normalizedCorrectCode) {
            resultMessage.style.color = "green";
            resultMessage.textContent = "✅ Correct! Well done.";
        } else {
            resultMessage.style.color = "red";
            resultMessage.textContent = "❌ Incorrect. Please try again.";
        }
    });

    document.getElementById("toggleCorrectCode").addEventListener("change", (e) => {
        const correctCodeContainer = document.getElementById("correctCodeContainer");
        correctCodeContainer.style.display = e.target.checked ? "block" : "none";
    });
</script>
