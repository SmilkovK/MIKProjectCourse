@{
    ViewData["Title"] = "Variables";
}

<div class="container">
    <h1>Variables</h1>
    <p>
        Variables are like boxes where we can keep information. They can hold numbers, letters, or words.
        Think of a variable like a school locker. You give it a name, and you can put something inside.
        Later, you can open it and use what's inside or change it.
    </p>

    <h2>Types of Variables</h2>
    <p>Here are some types of variables:</p>
    <ul>
        <li><strong>int</strong> - whole numbers (like 1, 2, 100)</li>
        <li><strong>float</strong> - numbers with decimal points (like 1.5, 3.14)</li>
        <li><strong>char</strong> - a single letter (like 'A')</li>
        <li><strong>string</strong> - a group of letters or words (like "Hello")</li>
    </ul>

    <h2>Example</h2>
    <div class="form-check form-switch mb-3">
        <input class="form-check-input" type="checkbox" id="languageToggle" onchange="convertCode()">
        <label class="form-check-label" for="languageToggle">Convert to C#</label>
    </div>

    <div class="code-container">
        <div class="code-header">Code Example</div>
        <div class="code-content">
            <pre id="codeBlock" style="white-space: pre-wrap;">
int age = 13;
float height = 1.55;
char grade = 'A';
string name = "Tom";
            </pre>
        </div>
    </div>

    <p>
        In this example:
        <ul>
            <li><code>age</code> is storing a number.</li>
            <li><code>height</code> is storing a number with decimals.</li>
            <li><code>grade</code> is storing one letter.</li>
            <li><code>name</code> is storing a name, which is a string.</li>
        </ul>
    </p>

    <p>You can also change the value later, like this:</p>
    <div class="code-container">
        <div class="code-header">Code Example</div>
        <div class="code-content">
            <pre style="white-space: pre-wrap;">
age = 15;
name = "Anna";
            </pre>
        </div>
    </div>

    <p>🌟 <strong>Fun Example:</strong> Let’s say you want to store your favorite number and color.</p>
    <div class="code-container">
        <div class="code-header">Code Example</div>
        <div class="code-content">
            <pre style="white-space: pre-wrap;">
int favNumber = 7;
string favColor = "Blue";
            </pre>
        </div>
    </div>
    <p>Now you’ve told the computer what your favorite number and color are!</p>

    <div class="navigation-buttons">
        <a href="@Url.Action("Index", "Introduction")" class="btn btn-outline-primary ajax-link">⬅ Introduction</a>
        <a href="@Url.Action("IfElse", "SP")" class="btn btn-primary ajax-link">SPIfElse →</a>
    </div>
</div>

<style>
    .container {
        max-width: 800px;
        padding: 20px;
        background-color: var(--bs-body-bg);
    }

    h1, h2 {
        color: var(--bs-heading-color);
    }

    h1 {
        margin-bottom: 20px;
    }

    h2 {
        margin-top: 25px;
        margin-bottom: 15px;
    }

    p, ul, li {
        color: var(--bs-body-color);
        line-height: 1.6;
    }

    ul {
        padding-left: 20px;
    }

    .code-container {
        margin: 25px 0;
        border: 1px solid var(--bs-border-color);
        border-radius: 5px;
        overflow: hidden;
        background-color: var(--code-bg);
    }

    .code-header {
        background-color: var(--code-header-bg);
        padding: 10px 15px;
        border-bottom: 1px solid var(--bs-border-color);
        font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
        font-size: 0.9rem;
        color: var(--bs-body-color);
    }

    .code-content {
        padding: 15px;
        overflow-x: auto;
        font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    }

    pre {
        margin: 0;
        background-color: transparent;
    }

    .navigation-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 30px;
    }

    .btn {
        padding: 8px 20px;
        border-radius: 4px;
        font-weight: 500;
    }

    .btn-primary {
        background-color: var(--bs-primary);
        border-color: var(--bs-primary);
        color: #fff;
        text-decoration: none;
    }

    .btn-outline-primary {
        color: var(--bs-primary);
        border-color: var(--bs-primary);
        background-color: transparent;
        text-decoration: none;
    }

    .form-check {
        margin-bottom: 20px;
    }
</style>

<script>
    function convertCode() {
        const isChecked = document.getElementById("languageToggle").checked;
        const codeBlock = document.getElementById("codeBlock");

        const cppCode = `int age = 13;
float height = 1.55;
char grade = 'A';
string name = "Alex";`;

        const csharpCode = `int age = 13;
float height = 1.55f;
char grade = 'A';
string name = "Alex";`;

        codeBlock.textContent = isChecked ? csharpCode : cppCode;
    }
</script>
