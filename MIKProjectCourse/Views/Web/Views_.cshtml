@{
    ViewData["Title"] = "Introduction to Views";
}

<div class="container">
    <h1>📌 Understanding Views in ASP.NET Core MVC</h1>

    <p>
        Views are the part of your application that shows <strong>information to the user</strong>.  
        They take data from your <strong>Models</strong> and display it in a web page.
    </p>

    <hr />

    <h2>🔹 What Are Views?</h2>
    <div class="card">
        <div class="card-body">
            <p>
                In ASP.NET Core MVC, a <strong>View</strong> is responsible for displaying the user interface (UI).  
                It is usually a combination of HTML and Razor syntax that can include dynamic data from your <strong>Models</strong>.
            </p>
            <p>
                Views are linked to <strong>Controllers</strong>. Each controller action usually returns a view to display the data to the user.
            </p>
        </div>
    </div>

    <h2>🔹 Views in MVC</h2>
    <div class="card">
        <div class="card-body">
            <p>
                Think of Views as the “face” of your application. They are what the user sees in the browser.  
                Controllers send data to Views, and Views format that data as HTML to be displayed.
            </p>
            <p>
                In this course, we will <strong>not go deep into Views</strong> because they are a long and complex topic.  
                Instead, we will focus on <strong>Controllers</strong> and <strong>Models</strong> so you understand the core structure of an ASP.NET Core MVC app.
            </p>
        </div>
    </div>

    <hr />
    <p class="text-center text-muted">
        ✅ In short: Views are what the user sees. They get data from Models and are selected by Controllers.  
        We will skip the details in this course to keep things simple for beginners.
    </p>

    <div class="navigation-buttons">
        <a href="@Url.Action("Models", "Web")" class="btn btn-outline-primary ajax-link">← Introduction to Program.cs</a>
        <a href="@Url.Action("Database", "Web")" class="btn btn-primary ajax-link">Next Chapter →</a>
    </div>
</div>

<style>
    .container {
        max-width: 800px;
        padding: 20px;
    }

    h1 {
        color: var(--bs-heading-color);
        margin-bottom: 20px;
    }

    h2 {
        color: var(--bs-heading-color);
        margin-top: 25px;
        margin-bottom: 15px;
    }

    p, ul {
        color: var(--bs-body-color);
        line-height: 1.6;
    }

    ul {
        list-style-type: none;
        padding-left: 0;
    }

    ul li {
        margin-bottom: 8px;
    }

    hr {
        border-top: 1px solid var(--bs-border-color);
        margin: 25px 0;
    }

    .card {
        border-radius: 8px;
        margin-bottom: 20px;
        border: 1px solid var(--bs-border-color);
        background-color: var(--bs-body-bg);
    }

    .card-body {
        padding: 15px;
    }

    .navigation-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 30px;
    }

    .btn {
        padding: 8px 20px;
        border-radius: 4px;
        font-weight: 500;
    }

    .btn-primary {
        background-color: var(--bs-primary);
        border-color: var(--bs-primary);
    }

    .btn-outline-primary {
        color: var(--bs-primary);
        border-color: var(--bs-primary);
    }

    p.text-muted {
        color: var(--bs-secondary);
    }
</style>
